// <auto-generated />
using System;
using Cleverbit.CodingTask.Data.DBProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cleverbit.CodingTask.Host.Migrations
{
    [DbContext(typeof(CleverbitDBContext))]
    [Migration("20210609003241_sqlchanges")]
    partial class sqlchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cleverbit.CodingTask.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123456",
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "123456",
                            Username = "User2"
                        },
                        new
                        {
                            Id = 3,
                            Password = "123456",
                            Username = "User3"
                        },
                        new
                        {
                            Id = 4,
                            Password = "123456",
                            Username = "User4"
                        });
                });

            modelBuilder.Entity("Cleverbit.CodingTask.Data.Entities.UserMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FirstUserAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("FirstUserId")
                        .HasColumnType("int");

                    b.Property<int>("FirstUserPoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatchEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchExpireSecond")
                        .HasColumnType("int");

                    b.Property<bool>("SecondUserAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("SecondUserId")
                        .HasColumnType("int");

                    b.Property<int>("SecondUserPoint")
                        .HasColumnType("int");

                    b.Property<int>("WinnerUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.ToTable("UserMatch");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstUserAccepted = false,
                            FirstUserId = 1,
                            FirstUserPoint = 0,
                            MatchEndDate = new DateTime(2021, 6, 10, 3, 32, 40, 843, DateTimeKind.Local).AddTicks(3729),
                            MatchExpireSecond = 30,
                            SecondUserAccepted = false,
                            SecondUserId = 2,
                            SecondUserPoint = 0,
                            WinnerUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            FirstUserAccepted = false,
                            FirstUserId = 3,
                            FirstUserPoint = 0,
                            MatchEndDate = new DateTime(2021, 6, 10, 3, 32, 40, 845, DateTimeKind.Local).AddTicks(787),
                            MatchExpireSecond = 30,
                            SecondUserAccepted = false,
                            SecondUserId = 4,
                            SecondUserPoint = 0,
                            WinnerUserId = 0
                        });
                });

            modelBuilder.Entity("Cleverbit.CodingTask.Data.Entities.UserMatch", b =>
                {
                    b.HasOne("Cleverbit.CodingTask.Data.Entities.User", "FirstUser")
                        .WithMany()
                        .HasForeignKey("FirstUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cleverbit.CodingTask.Data.Entities.User", "SecondUser")
                        .WithMany()
                        .HasForeignKey("SecondUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstUser");

                    b.Navigation("SecondUser");
                });
#pragma warning restore 612, 618
        }
    }
}
